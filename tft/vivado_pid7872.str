/*

Xilinx Vivado v2018.2 (64-bit) [Major: 2018, Minor: 2]
SW Build: 2258646 on Thu Jun 14 20:03:12 MDT 2018
IP Build: 2256618 on Thu Jun 14 22:10:49 MDT 2018

Process ID: 7872
License: Customer

Current time: 	Sat Apr 06 12:41:14 EEST 2019
Time zone: 	Eastern European Time (Asia/Istanbul)

OS: Windows 10
OS Version: 10.0
OS Architecture: amd64
Available processors (cores): 6

Screen size: 1920x1080
Screen resolution (DPI): 96
Available screens: 1
Available disk space: 378 GB
Default font: family=Dialog,name=Dialog,style=plain,size=12

Java version: 	1.8.0_112 64-bit
Java home: 	C:/Xilinx/Vivado/2018.2/tps/win64/jre
Java executable location: 	C:/Xilinx/Vivado/2018.2/tps/win64/jre/bin/java.exe
Java initial memory (-Xms): 	128 MB
Java maximum memory (-Xmx):	 2 GB


User name: 	ARGE
User home directory: C:/Users/ARGE
User working directory: D:/PROJECTs/fpga-iot/tft
User country: 	TR
User language: 	tr
User locale: 	tr_TR

RDI_BASEROOT: C:/Xilinx/Vivado
HDI_APPROOT: C:/Xilinx/Vivado/2018.2
RDI_DATADIR: C:/Xilinx/Vivado/2018.2/data
RDI_BINDIR: C:/Xilinx/Vivado/2018.2/bin

Vivado preferences file location: C:/Users/ARGE/AppData/Roaming/Xilinx/Vivado/2018.2/vivado.xml
Vivado preferences directory: C:/Users/ARGE/AppData/Roaming/Xilinx/Vivado/2018.2/
Vivado layouts directory: C:/Users/ARGE/AppData/Roaming/Xilinx/Vivado/2018.2/layouts
PlanAhead jar file location: 	C:/Xilinx/Vivado/2018.2/lib/classes/planAhead.jar
Vivado log file location: 	D:/PROJECTs/fpga-iot/tft/vivado.log
Vivado journal file location: 	D:/PROJECTs/fpga-iot/tft/vivado.jou
Engine tmp dir: 	D:/PROJECTs/fpga-iot/tft/.Xil/Vivado-7872-DESKTOP-3215KAN

Xilinx Environment Variables
----------------------------
XILINX: C:/Xilinx/Vivado/2018.2/ids_lite/ISE
XILINX_DSP: C:/Xilinx/Vivado/2018.2/ids_lite/ISE
XILINX_PLANAHEAD: C:/Xilinx/Vivado/2018.2
XILINX_SDK: C:/Xilinx/SDK/2018.2
XILINX_VIVADO: C:/Xilinx/Vivado/2018.2
XILINX_VIVADO_HLS: C:/Xilinx/Vivado/2018.2


GUI allocated memory:	201 MB
GUI max memory:		3,052 MB
Engine allocated memory: 525 MB

Copyright 1986-2018 Xilinx, Inc. All Rights Reserved.

*/

// TclEventType: START_GUI
// Tcl Message: start_gui 
// TclEventType: PROJECT_OPEN_DIALOG
// [GUI Memory]: 69 MB (+69642kb) [00:00:08]
// [Engine Memory]: 489 MB (+361748kb) [00:00:08]
// bx (ck):  Open Project : addNotify
// Opening Vivado Project: D:\PROJECTs\fpga-iot\tft\tft.xpr. Version: Vivado v2018.2 
// TclEventType: DEBUG_PROBE_SET_CHANGE
// Tcl Message: open_project D:/PROJECTs/fpga-iot/tft/tft.xpr 
// TclEventType: MSGMGR_MOVEMSG
// TclEventType: FILE_SET_NEW
// TclEventType: RUN_COMPLETED
// TclEventType: RUN_CURRENT
// TclEventType: PROJECT_NEW
// Tcl Message: open_project D:/PROJECTs/fpga-iot/tft/tft.xpr 
// Tcl Message: Scanning sources... Finished scanning sources 
// Tcl Message: INFO: [IP_Flow 19-234] Refreshing IP repositories INFO: [IP_Flow 19-1704] No user IP repositories specified 
// Tcl Message: INFO: [IP_Flow 19-2313] Loaded Vivado IP repository 'C:/Xilinx/Vivado/2018.2/data/ip'. 
// HMemoryUtils.trashcanNow. Engine heap size: 525 MB. GUI used memory: 37 MB. Current time: 4/6/19 12:41:17 PM EEST
// [Engine Memory]: 525 MB (+12008kb) [00:00:13]
// TclEventType: PROJECT_NEW
// [Engine Memory]: 572 MB (+21665kb) [00:00:17]
// Tcl Message: open_project: Time (s): cpu = 00:00:17 ; elapsed = 00:00:11 . Memory (MB): peak = 790.676 ; gain = 69.020 
// Project name: tft; location: D:/PROJECTs/fpga-iot/tft; part: xc7a35tcpg236-1
dismissDialog("Open Project"); // bx (ck)
// TclEventType: DG_ANALYSIS_MSG_RESET
// TclEventType: DG_GRAPH_GENERATED
// Tcl Message: update_compile_order -fileset sources_1 
// PAPropertyPanels.initPanels (SPI_GLCD.vhd) elapsed time: 0.5s
// Elapsed time: 10 seconds
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, main(Behavioral) (SPI_GLCD.vhd)]", 1, true); // B (D, ck) - Node
// PAResourceOtoP.PAViews_PROJECT_SUMMARY: Project Summary: close view
closeView(PAResourceOtoP.PAViews_PROJECT_SUMMARY, "Project Summary"); // J
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, main(Behavioral) (SPI_GLCD.vhd)]", 1, true); // B (D, ck) - Node
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, main(Behavioral) (SPI_GLCD.vhd)]", 1, true); // B (D, ck) - Node
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, main(Behavioral) (SPI_GLCD.vhd)]", 1, true, false, false, false, false, true); // B (D, ck) - Double Click - Node
selectCodeEditor("SPI_GLCD.vhd", 271, 395); // ce (w, ck)
// [GUI Memory]: 73 MB (+649kb) [00:00:53]
// [GUI Memory]: 77 MB (+695kb) [00:01:08]
// Elapsed time: 289 seconds
selectCodeEditor("SPI_GLCD.vhd", 157, 259); // ce (w, ck)
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 1416 ms. Increasing delay to 3000 ms.
// Elapsed time: 732 seconds
selectCodeEditor("SPI_GLCD.vhd", 65, 260, false, false, false, true, false); // ce (w, ck) - Popup Trigger
selectCodeEditor("SPI_GLCD.vhd", 65, 260); // ce (w, ck)
selectCodeEditor("SPI_GLCD.vhd", 66, 267); // ce (w, ck)
selectCodeEditor("SPI_GLCD.vhd", 66, 267, false, false, false, false, true); // ce (w, ck) - Double Click
selectCodeEditor("SPI_GLCD.vhd", 151, 265); // ce (w, ck)
selectCodeEditor("SPI_GLCD.vhd", 311, 231); // ce (w, ck)
selectCodeEditor("SPI_GLCD.vhd", 104, 233, false, false, false, true, false); // ce (w, ck) - Popup Trigger
dismissFileChooser();
selectCodeEditor("SPI_GLCD.vhd", 313, 225); // ce (w, ck)
typeControlKey((HResource) null, "SPI_GLCD.vhd", 'c'); // ce (w, ck)
selectCodeEditor("SPI_GLCD.vhd", 276, 267); // ce (w, ck)
selectCodeEditor("SPI_GLCD.vhd", 276, 267, false, false, false, false, true); // ce (w, ck) - Double Click
typeControlKey((HResource) null, "SPI_GLCD.vhd", 'v'); // ce (w, ck)
selectCodeEditor("SPI_GLCD.vhd", 479, 265); // ce (w, ck)
// Elapsed time: 14 seconds
typeControlKey((HResource) null, "SPI_GLCD.vhd", 'v'); // ce (w, ck)
selectCodeEditor("SPI_GLCD.vhd", 89, 280); // ce (w, ck)
selectCodeEditor("SPI_GLCD.vhd", 89, 280, false, false, false, false, true); // ce (w, ck) - Double Click
selectCodeEditor("SPI_GLCD.vhd", 65, 271); // ce (w, ck)
selectCodeEditor("SPI_GLCD.vhd", 65, 271); // ce (w, ck)
selectCodeEditor("SPI_GLCD.vhd", 70, 263); // ce (w, ck)
selectCodeEditor("SPI_GLCD.vhd", 70, 263); // ce (w, ck)
selectCodeEditor("SPI_GLCD.vhd", 70, 263, false, false, false, false, true); // ce (w, ck) - Double Click
typeControlKey((HResource) null, "SPI_GLCD.vhd", 'c'); // ce (w, ck)
// [GUI Memory]: 82 MB (+833kb) [00:18:31]
selectCodeEditor("SPI_GLCD.vhd", 125, 279); // ce (w, ck)
selectCodeEditor("SPI_GLCD.vhd", 125, 279, false, false, false, false, true); // ce (w, ck) - Double Click
typeControlKey((HResource) null, "SPI_GLCD.vhd", 'v'); // ce (w, ck)
// Elapsed time: 34 seconds
selectCodeEditor("SPI_GLCD.vhd", 964, 157); // ce (w, ck)
// Elapsed time: 19 seconds
selectCodeEditor("SPI_GLCD.vhd", 15, 279); // ce (w, ck)
// [GUI Memory]: 87 MB (+979kb) [00:19:40]
// Elapsed time: 66 seconds
selectCodeEditor("SPI_GLCD.vhd", 102, 280); // ce (w, ck)
// TclEventType: DG_GRAPH_STALE
// TclEventType: FILE_SET_CHANGE
selectCodeEditor("SPI_GLCD.vhd", 196, 284); // ce (w, ck)
// TclEventType: DG_ANALYSIS_MSG_RESET
// TclEventType: DG_GRAPH_GENERATED
// Elapsed time: 19 seconds
selectCodeEditor("SPI_GLCD.vhd", 84, 108); // ce (w, ck)
selectCodeEditor("SPI_GLCD.vhd", 84, 108, false, false, false, false, true); // ce (w, ck) - Double Click
typeControlKey((HResource) null, "SPI_GLCD.vhd", 'c'); // ce (w, ck)
selectCodeEditor("SPI_GLCD.vhd", 67, 302); // ce (w, ck)
typeControlKey((HResource) null, "SPI_GLCD.vhd", 'v'); // ce (w, ck)
selectCodeEditor("SPI_GLCD.vhd", 77, 130); // ce (w, ck)
selectCodeEditor("SPI_GLCD.vhd", 77, 130, false, false, false, false, true); // ce (w, ck) - Double Click
typeControlKey((HResource) null, "SPI_GLCD.vhd", 'c'); // ce (w, ck)
selectCodeEditor("SPI_GLCD.vhd", 119, 301); // ce (w, ck)
typeControlKey((HResource) null, "SPI_GLCD.vhd", 'v'); // ce (w, ck)
selectCodeEditor("SPI_GLCD.vhd", 80, 145); // ce (w, ck)
selectCodeEditor("SPI_GLCD.vhd", 80, 145, false, false, false, false, true); // ce (w, ck) - Double Click
typeControlKey((HResource) null, "SPI_GLCD.vhd", 'c'); // ce (w, ck)
selectCodeEditor("SPI_GLCD.vhd", 156, 300); // ce (w, ck)
typeControlKey((HResource) null, "SPI_GLCD.vhd", 'v'); // ce (w, ck)
selectCodeEditor("SPI_GLCD.vhd", 78, 157); // ce (w, ck)
selectCodeEditor("SPI_GLCD.vhd", 78, 157, false, false, false, false, true); // ce (w, ck) - Double Click
typeControlKey((HResource) null, "SPI_GLCD.vhd", 'c'); // ce (w, ck)
selectCodeEditor("SPI_GLCD.vhd", 184, 304); // ce (w, ck)
typeControlKey((HResource) null, "SPI_GLCD.vhd", 'v'); // ce (w, ck)
selectCodeEditor("SPI_GLCD.vhd", 77, 176); // ce (w, ck)
selectCodeEditor("SPI_GLCD.vhd", 77, 176, false, false, false, false, true); // ce (w, ck) - Double Click
typeControlKey((HResource) null, "SPI_GLCD.vhd", 'c'); // ce (w, ck)
selectCodeEditor("SPI_GLCD.vhd", 235, 293); // ce (w, ck)
typeControlKey((HResource) null, "SPI_GLCD.vhd", 'v'); // ce (w, ck)
selectCodeEditor("SPI_GLCD.vhd", 82, 196); // ce (w, ck)
selectCodeEditor("SPI_GLCD.vhd", 82, 196, false, false, false, false, true); // ce (w, ck) - Double Click
typeControlKey((HResource) null, "SPI_GLCD.vhd", 'c'); // ce (w, ck)
selectCodeEditor("SPI_GLCD.vhd", 276, 293); // ce (w, ck)
typeControlKey((HResource) null, "SPI_GLCD.vhd", 'v'); // ce (w, ck)
selectCodeEditor("SPI_GLCD.vhd", 90, 214); // ce (w, ck)
selectCodeEditor("SPI_GLCD.vhd", 90, 214); // ce (w, ck)
selectCodeEditor("SPI_GLCD.vhd", 90, 214, false, false, false, false, true); // ce (w, ck) - Double Click
typeControlKey((HResource) null, "SPI_GLCD.vhd", 'c'); // ce (w, ck)
selectCodeEditor("SPI_GLCD.vhd", 337, 301); // ce (w, ck)
typeControlKey((HResource) null, "SPI_GLCD.vhd", 'v'); // ce (w, ck)
selectCodeEditor("SPI_GLCD.vhd", 85, 232); // ce (w, ck)
selectCodeEditor("SPI_GLCD.vhd", 85, 232, false, false, false, false, true); // ce (w, ck) - Double Click
typeControlKey((HResource) null, "SPI_GLCD.vhd", 'c'); // ce (w, ck)
selectCodeEditor("SPI_GLCD.vhd", 391, 303); // ce (w, ck)
typeControlKey((HResource) null, "SPI_GLCD.vhd", 'v'); // ce (w, ck)
// TclEventType: DG_GRAPH_STALE
// TclEventType: FILE_SET_CHANGE
// TclEventType: DG_ANALYSIS_MSG_RESET
// TclEventType: DG_GRAPH_GENERATED
// Elapsed time: 99 seconds
selectCodeEditor("SPI_GLCD.vhd", 483, 298); // ce (w, ck)
// [GUI Memory]: 92 MB (+362kb) [00:23:21]
// Elapsed time: 17 seconds
typeControlKey((HResource) null, "SPI_GLCD.vhd", 'c'); // ce (w, ck)
typeControlKey((HResource) null, "SPI_GLCD.vhd", 'v'); // ce (w, ck)
typeControlKey((HResource) null, "SPI_GLCD.vhd", 'v'); // ce (w, ck)
typeControlKey((HResource) null, "SPI_GLCD.vhd", 'v'); // ce (w, ck)
typeControlKey((HResource) null, "SPI_GLCD.vhd", 'v'); // ce (w, ck)
typeControlKey((HResource) null, "SPI_GLCD.vhd", 'v'); // ce (w, ck)
typeControlKey((HResource) null, "SPI_GLCD.vhd", 'v'); // ce (w, ck)
typeControlKey((HResource) null, "SPI_GLCD.vhd", 'v'); // ce (w, ck)
// Elapsed time: 10 seconds
selectCodeEditor("SPI_GLCD.vhd", 48, 298); // ce (w, ck)
// Elapsed time: 13 seconds
selectCodeEditor("SPI_GLCD.vhd", 82, 107); // ce (w, ck)
selectCodeEditor("SPI_GLCD.vhd", 82, 107, false, false, false, false, true); // ce (w, ck) - Double Click
typeControlKey((HResource) null, "SPI_GLCD.vhd", 'c'); // ce (w, ck)
selectCodeEditor("SPI_GLCD.vhd", 82, 299); // ce (w, ck)
typeControlKey((HResource) null, "SPI_GLCD.vhd", 'v'); // ce (w, ck)
selectCodeEditor("SPI_GLCD.vhd", 80, 134); // ce (w, ck)
selectCodeEditor("SPI_GLCD.vhd", 85, 131); // ce (w, ck)
selectCodeEditor("SPI_GLCD.vhd", 85, 131, false, false, false, false, true); // ce (w, ck) - Double Click
typeControlKey((HResource) null, "SPI_GLCD.vhd", 'c'); // ce (w, ck)
selectCodeEditor("SPI_GLCD.vhd", 83, 317); // ce (w, ck)
typeControlKey((HResource) null, "SPI_GLCD.vhd", 'v'); // ce (w, ck)
selectCodeEditor("SPI_GLCD.vhd", 69, 142); // ce (w, ck)
selectCodeEditor("SPI_GLCD.vhd", 69, 142, false, false, false, false, true); // ce (w, ck) - Double Click
typeControlKey((HResource) null, "SPI_GLCD.vhd", 'c'); // ce (w, ck)
selectCodeEditor("SPI_GLCD.vhd", 84, 334); // ce (w, ck)
typeControlKey((HResource) null, "SPI_GLCD.vhd", 'v'); // ce (w, ck)
selectCodeEditor("SPI_GLCD.vhd", 77, 162); // ce (w, ck)
selectCodeEditor("SPI_GLCD.vhd", 77, 162, false, false, false, false, true); // ce (w, ck) - Double Click
selectCodeEditor("SPI_GLCD.vhd", 77, 162); // ce (w, ck)
selectCodeEditor("SPI_GLCD.vhd", 77, 162); // ce (w, ck)
selectCodeEditor("SPI_GLCD.vhd", 77, 162); // ce (w, ck)
selectCodeEditor("SPI_GLCD.vhd", 71, 181); // ce (w, ck)
selectCodeEditor("SPI_GLCD.vhd", 84, 164); // ce (w, ck)
selectCodeEditor("SPI_GLCD.vhd", 84, 164, false, false, false, false, true); // ce (w, ck) - Double Click
typeControlKey((HResource) null, "SPI_GLCD.vhd", 'c'); // ce (w, ck)
selectCodeEditor("SPI_GLCD.vhd", 85, 350); // ce (w, ck)
typeControlKey((HResource) null, "SPI_GLCD.vhd", 'v'); // ce (w, ck)
selectCodeEditor("SPI_GLCD.vhd", 77, 177); // ce (w, ck)
selectCodeEditor("SPI_GLCD.vhd", 77, 177, false, false, false, false, true); // ce (w, ck) - Double Click
typeControlKey((HResource) null, "SPI_GLCD.vhd", 'c'); // ce (w, ck)
selectCodeEditor("SPI_GLCD.vhd", 86, 369); // ce (w, ck)
typeControlKey((HResource) null, "SPI_GLCD.vhd", 'v'); // ce (w, ck)
selectCodeEditor("SPI_GLCD.vhd", 92, 196); // ce (w, ck)
selectCodeEditor("SPI_GLCD.vhd", 92, 196, false, false, false, false, true); // ce (w, ck) - Double Click
typeControlKey((HResource) null, "SPI_GLCD.vhd", 'c'); // ce (w, ck)
selectCodeEditor("SPI_GLCD.vhd", 84, 388); // ce (w, ck)
typeControlKey((HResource) null, "SPI_GLCD.vhd", 'v'); // ce (w, ck)
selectCodeEditor("SPI_GLCD.vhd", 92, 213); // ce (w, ck)
selectCodeEditor("SPI_GLCD.vhd", 92, 213, false, false, false, false, true); // ce (w, ck) - Double Click
typeControlKey((HResource) null, "SPI_GLCD.vhd", 'c'); // ce (w, ck)
selectCodeEditor("SPI_GLCD.vhd", 83, 395); // ce (w, ck)
typeControlKey((HResource) null, "SPI_GLCD.vhd", 'v'); // ce (w, ck)
selectCodeEditor("SPI_GLCD.vhd", 87, 225); // ce (w, ck)
selectCodeEditor("SPI_GLCD.vhd", 87, 225, false, false, false, false, true); // ce (w, ck) - Double Click
typeControlKey((HResource) null, "SPI_GLCD.vhd", 'c'); // ce (w, ck)
selectCodeEditor("SPI_GLCD.vhd", 82, 415); // ce (w, ck)
typeControlKey((HResource) null, "SPI_GLCD.vhd", 'v'); // ce (w, ck)
// TclEventType: DG_GRAPH_STALE
// TclEventType: FILE_SET_CHANGE
// TclEventType: DG_ANALYSIS_MSG_RESET
// TclEventType: DG_GRAPH_GENERATED
// HMemoryUtils.trashcanNow. Engine heap size: 600 MB. GUI used memory: 46 MB. Current time: 4/6/19 1:05:37 PM EEST
// Elapsed time: 60 seconds
selectCodeEditor("SPI_GLCD.vhd", 199, 164); // ce (w, ck)
selectCodeEditor("SPI_GLCD.vhd", 204, 160); // ce (w, ck)
// TclEventType: DG_GRAPH_STALE
// TclEventType: FILE_SET_CHANGE
// TclEventType: DG_ANALYSIS_MSG_RESET
// TclEventType: DG_GRAPH_GENERATED
// Elapsed time: 133 seconds
selectCodeEditor("SPI_GLCD.vhd", 153, 176); // ce (w, ck)
selectCodeEditor("SPI_GLCD.vhd", 100, 195); // ce (w, ck)
selectCodeEditor("SPI_GLCD.vhd", 100, 195, false, false, false, false, true); // ce (w, ck) - Double Click
typeControlKey((HResource) null, "SPI_GLCD.vhd", 'c'); // ce (w, ck)
selectCodeEditor("SPI_GLCD.vhd", 189, 183); // ce (w, ck)
typeControlKey((HResource) null, "SPI_GLCD.vhd", 'v'); // ce (w, ck)
selectCodeEditor("SPI_GLCD.vhd", 89, 211); // ce (w, ck)
selectCodeEditor("SPI_GLCD.vhd", 89, 211, false, false, false, false, true); // ce (w, ck) - Double Click
typeControlKey((HResource) null, "SPI_GLCD.vhd", 'c'); // ce (w, ck)
selectCodeEditor("SPI_GLCD.vhd", 235, 182); // ce (w, ck)
typeControlKey((HResource) null, "SPI_GLCD.vhd", 'v'); // ce (w, ck)
selectCodeEditor("SPI_GLCD.vhd", 87, 235); // ce (w, ck)
selectCodeEditor("SPI_GLCD.vhd", 87, 235, false, false, false, false, true); // ce (w, ck) - Double Click
selectCodeEditor("SPI_GLCD.vhd", 100, 231); // ce (w, ck)
selectCodeEditor("SPI_GLCD.vhd", 100, 231, false, false, false, false, true); // ce (w, ck) - Double Click
typeControlKey((HResource) null, "SPI_GLCD.vhd", 'c'); // ce (w, ck)
selectCodeEditor("SPI_GLCD.vhd", 266, 178); // ce (w, ck)
typeControlKey((HResource) null, "SPI_GLCD.vhd", 'v'); // ce (w, ck)
selectCodeEditor("SPI_GLCD.vhd", 78, 250); // ce (w, ck)
selectCodeEditor("SPI_GLCD.vhd", 99, 250); // ce (w, ck)
selectCodeEditor("SPI_GLCD.vhd", 99, 250, false, false, false, false, true); // ce (w, ck) - Double Click
typeControlKey((HResource) null, "SPI_GLCD.vhd", 'c'); // ce (w, ck)
selectCodeEditor("SPI_GLCD.vhd", 298, 182); // ce (w, ck)
typeControlKey((HResource) null, "SPI_GLCD.vhd", 'v'); // ce (w, ck)
selectCodeEditor("SPI_GLCD.vhd", 85, 268); // ce (w, ck)
selectCodeEditor("SPI_GLCD.vhd", 85, 268, false, false, false, false, true); // ce (w, ck) - Double Click
selectCodeEditor("SPI_GLCD.vhd", 107, 266); // ce (w, ck)
selectCodeEditor("SPI_GLCD.vhd", 107, 266, false, false, false, false, true); // ce (w, ck) - Double Click
typeControlKey((HResource) null, "SPI_GLCD.vhd", 'c'); // ce (w, ck)
selectCodeEditor("SPI_GLCD.vhd", 350, 181); // ce (w, ck)
typeControlKey((HResource) null, "SPI_GLCD.vhd", 'v'); // ce (w, ck)
selectCodeEditor("SPI_GLCD.vhd", 114, 284); // ce (w, ck)
selectCodeEditor("SPI_GLCD.vhd", 114, 284, false, false, false, false, true); // ce (w, ck) - Double Click
typeControlKey((HResource) null, "SPI_GLCD.vhd", 'c'); // ce (w, ck)
selectCodeEditor("SPI_GLCD.vhd", 385, 182); // ce (w, ck)
typeControlKey((HResource) null, "SPI_GLCD.vhd", 'v'); // ce (w, ck)
selectCodeEditor("SPI_GLCD.vhd", 101, 302); // ce (w, ck)
selectCodeEditor("SPI_GLCD.vhd", 101, 302, false, false, false, false, true); // ce (w, ck) - Double Click
typeControlKey((HResource) null, "SPI_GLCD.vhd", 'c'); // ce (w, ck)
selectCodeEditor("SPI_GLCD.vhd", 465, 177); // ce (w, ck)
typeControlKey((HResource) null, "SPI_GLCD.vhd", 'v'); // ce (w, ck)
selectCodeEditor("SPI_GLCD.vhd", 102, 323); // ce (w, ck)
selectCodeEditor("SPI_GLCD.vhd", 102, 323, false, false, false, false, true); // ce (w, ck) - Double Click
selectCodeEditor("SPI_GLCD.vhd", 104, 315); // ce (w, ck)
selectCodeEditor("SPI_GLCD.vhd", 104, 315, false, false, false, false, true); // ce (w, ck) - Double Click
typeControlKey((HResource) null, "SPI_GLCD.vhd", 'c'); // ce (w, ck)
selectCodeEditor("SPI_GLCD.vhd", 514, 178); // ce (w, ck)
typeControlKey((HResource) null, "SPI_GLCD.vhd", 'v'); // ce (w, ck)
// TclEventType: DG_GRAPH_STALE
// TclEventType: FILE_SET_CHANGE
// TclEventType: DG_ANALYSIS_MSG_RESET
selectCodeEditor("SPI_GLCD.vhd", 135, 320); // ce (w, ck)
// TclEventType: DG_GRAPH_GENERATED
selectButton(RDIResourceCommand.RDICommands_LINE_COMMENT, (String) null); // B (f, ck)
selectCodeEditor("SPI_GLCD.vhd", 304, 295); // ce (w, ck)
// TclEventType: DG_GRAPH_STALE
// TclEventType: FILE_SET_CHANGE
// TclEventType: DG_ANALYSIS_MSG_RESET
// TclEventType: DG_GRAPH_GENERATED
// Elapsed time: 14 seconds
selectCodeEditor("SPI_GLCD.vhd", 181, 364); // ce (w, ck)
// Elapsed time: 26 seconds
selectCodeEditor("SPI_GLCD.vhd", 226, 46); // ce (w, ck)
typeControlKey((HResource) null, "SPI_GLCD.vhd", 'c'); // ce (w, ck)
selectCodeEditor("SPI_GLCD.vhd", 161, 285); // ce (w, ck)
typeControlKey((HResource) null, "SPI_GLCD.vhd", 'v'); // ce (w, ck)
// [GUI Memory]: 98 MB (+2075kb) [00:29:32]
// TclEventType: DG_GRAPH_STALE
// TclEventType: FILE_SET_CHANGE
// TclEventType: DG_ANALYSIS_MSG_RESET
// TclEventType: DG_GRAPH_GENERATED
selectCodeEditor("SPI_GLCD.vhd", 108, 197); // ce (w, ck)
selectCodeEditor("SPI_GLCD.vhd", 107, 197, false, false, false, false, true); // ce (w, ck) - Double Click
// [Engine Memory]: 603 MB (+2094kb) [00:30:08]
// Elapsed time: 47 seconds
selectCodeEditor("SPI_GLCD.vhd", 295, 288, false, false, false, true, false); // ce (w, ck) - Popup Trigger
selectCodeEditor("SPI_GLCD.vhd", 281, 292); // ce (w, ck)
// HMemoryUtils.trashcanNow. Engine heap size: 606 MB. GUI used memory: 45 MB. Current time: 4/6/19 1:35:40 PM EEST
// Elapsed time: 2024 seconds
selectCodeEditor("SPI_GLCD.vhd", 70, 146); // ce (w, ck)
typeControlKey((HResource) null, "SPI_GLCD.vhd", 'c'); // ce (w, ck)
// Elapsed time: 15 seconds
selectCodeEditor("SPI_GLCD.vhd", 283, 254); // ce (w, ck)
selectCodeEditor("SPI_GLCD.vhd", 293, 247); // ce (w, ck)
typeControlKey((HResource) null, "SPI_GLCD.vhd", 'v'); // ce (w, ck)
typeControlKey((HResource) null, "SPI_GLCD.vhd", 'v'); // ce (w, ck)
typeControlKey((HResource) null, "SPI_GLCD.vhd", 'v'); // ce (w, ck)
typeControlKey((HResource) null, "SPI_GLCD.vhd", 'v'); // ce (w, ck)
// TclEventType: DG_GRAPH_STALE
// TclEventType: FILE_SET_CHANGE
// TclEventType: DG_ANALYSIS_MSG_RESET
selectTree(PAResourceEtoH.FlowNavigatorTreePanel_FLOW_NAVIGATOR_TREE, "[, Program and Debug, Generate Bitstream]", 20, false); // u (O, ck)
// Run Command: PAResourceCommand.PACommandNames_RUN_BITGEN
// A (ck): Synthesis is Out-of-date: addNotify
// TclEventType: DG_GRAPH_GENERATED
selectButton(RDIResource.BaseDialog_YES, "Yes"); // a (A)
// bx (ck):  Resetting Runs : addNotify
dismissDialog("Synthesis is Out-of-date"); // A (ck)
// TclEventType: RUN_MODIFY
// TclEventType: RUN_RESET
// TclEventType: RUN_MODIFY
// Tcl Message: reset_run synth_1 
dismissDialog("Resetting Runs"); // bx (ck)
// TclEventType: RUN_LAUNCH
// bx (ck):  Generate Bitstream : addNotify
// Tcl Message: launch_runs impl_1 -to_step write_bitstream -jobs 4 
// TclEventType: RUN_MODIFY
// Tcl Message: [Sat Apr  6 13:46:12 2019] Launched synth_1... Run output will be captured here: D:/PROJECTs/fpga-iot/tft/tft.runs/synth_1/runme.log [Sat Apr  6 13:46:12 2019] Launched impl_1... Run output will be captured here: D:/PROJECTs/fpga-iot/tft/tft.runs/impl_1/runme.log 
dismissDialog("Generate Bitstream"); // bx (ck)
// TclEventType: RUN_FAILED
// ah (ck): Synthesis Failed: addNotify
// Elapsed time: 44 seconds
selectButton(RDIResource.BaseDialog_OK, "OK"); // a (ah)
// Run Command: PAResourceCommand.PACommandNames_MESSAGE_WINDOW
dismissDialog("Synthesis Failed"); // ah (ck)
selectTree(PAResourceItoN.MsgTreePanel_MESSAGE_VIEW_TREE, "[, Synthesis, [Synth 8-421] mismatched array sizes in rhs and lhs of assignment [D:/PROJECTs/fpga-iot/tft/tft.srcs/sources_1/imports/Desktop/SPI_GLCD.vhd:80]. ]", 1, false); // ah (O, ck)
messagesViewCrossProbe(PAResourceItoN.MsgTreePanel_MESSAGE_VIEW_TREE, "src;-;D:\PROJECTs\fpga-iot\tft\tft.srcs\sources_1\imports\Desktop\SPI_GLCD.vhd;-;;-;16;-;line;-;80;-;;-;16;-;"); // ah (O, ck)
// Elapsed time: 75 seconds
selectCodeEditor("SPI_GLCD.vhd", 203, 160); // ce (w, ck)
// TclEventType: DG_GRAPH_STALE
// TclEventType: FILE_SET_CHANGE
// TclEventType: DG_ANALYSIS_MSG_RESET
// TclEventType: DG_GRAPH_GENERATED
selectTree(PAResourceEtoH.FlowNavigatorTreePanel_FLOW_NAVIGATOR_TREE, "[, Program and Debug, Generate Bitstream]", 20, false); // u (O, ck)
// Run Command: PAResourceCommand.PACommandNames_RUN_BITGEN
// A (ck): No Implementation Results Available: addNotify
selectButton(RDIResource.BaseDialog_YES, "Yes"); // a (A)
// bx (ck):  Resetting Runs : addNotify
dismissDialog("No Implementation Results Available"); // A (ck)
// TclEventType: RUN_MODIFY
// TclEventType: RUN_RESET
// TclEventType: RUN_MODIFY
// Tcl Message: reset_run synth_1 
// TclEventType: RUN_LAUNCH
dismissDialog("Resetting Runs"); // bx (ck)
// TclEventType: RUN_MODIFY
// Tcl Message: launch_runs impl_1 -to_step write_bitstream -jobs 4 
// Tcl Message: [Sat Apr  6 13:48:26 2019] Launched synth_1... Run output will be captured here: D:/PROJECTs/fpga-iot/tft/tft.runs/synth_1/runme.log [Sat Apr  6 13:48:26 2019] Launched impl_1... Run output will be captured here: D:/PROJECTs/fpga-iot/tft/tft.runs/impl_1/runme.log 
// TclEventType: RUN_COMPLETED
// Elapsed time: 69 seconds
selectCodeEditor("SPI_GLCD.vhd", 205, 389); // ce (w, ck)
// TclEventType: RUN_STEP_COMPLETED
// TclEventType: RUN_COMPLETED
// ah (ck): Bitstream Generation Completed: addNotify
// Elapsed time: 107 seconds
selectRadioButton(PAResourceCommand.PACommandNames_OPEN_HARDWARE_MANAGER, "Open Hardware Manager"); // a (Q, ah)
selectButton(RDIResource.BaseDialog_OK, "OK"); // a (ah)
// Run Command: PAResourceCommand.PACommandNames_OPEN_HARDWARE_MANAGER
// Tcl Command: 'rdi::info_commands get_hw_probes'
// Tcl Command: 'load_features labtools'
// TclEventType: LOAD_FEATURE
// bx (ck):  Open Hardware Manager : addNotify
// TclEventType: HW_SESSION_OPEN
// Tcl Message: open_hw 
dismissDialog("Open Hardware Manager"); // bx (ck)
selectButton(PAResourceOtoP.ProgramDebugTab_OPEN_TARGET, "Open target"); // h (cM, ck)
// HMemoryUtils.trashcanNow. Engine heap size: 619 MB. GUI used memory: 48 MB. Current time: 4/6/19 1:51:30 PM EEST
selectMenuItem(PAResourceCommand.PACommandNames_AUTO_CONNECT_TARGET, "Auto Connect"); // ad (aj, ck)
// Run Command: PAResourceCommand.PACommandNames_AUTO_CONNECT_TARGET
// bx (ck):  Auto Connect : addNotify
// Tcl Message: connect_hw_server 
// Tcl Message: INFO: [Labtools 27-2285] Connecting to hw_server url TCP:localhost:3121 
// Tcl Message: INFO: [Labtools 27-2222] Launching hw_server... 
// Tcl Message: INFO: [Labtools 27-2221] Launch Output:  ****** Xilinx hw_server v2018.2   **** Build date : Jun 14 2018-20:42:52     ** Copyright 1986-2018 Xilinx, Inc. All Rights Reserved.   
// TclEventType: HW_SERVER_UPDATE
// TclEventType: HW_TARGET_CHANGE
// TclEventType: HW_TARGET_CLOSE
// TclEventType: HW_DEVICE_CHANGE
// TclEventType: HW_SYSMON_ADD
// TclEventType: HW_TARGET_UPDATE
// Tcl Message: open_hw_target 
// Tcl Message: INFO: [Labtoolstcl 44-466] Opening hw_target localhost:3121/xilinx_tcf/Digilent/210183A5800EA 
// TclEventType: HW_DEVICE_CHANGE
// Tcl Message: set_property PROGRAM.FILE {D:/PROJECTs/fpga-iot/tft/tft.runs/impl_1/main.bit} [get_hw_devices xc7a35t_0] 
// Tcl Message: current_hw_device [get_hw_devices xc7a35t_0] 
// TclEventType: HW_DEVICE_CHANGE
// TclEventType: HW_SYSMON_CHANGE
// TclEventType: HW_DEVICE_UPDATE
// TclEventType: HW_DEVICE_CHANGE
// Tcl Message: refresh_hw_device -update_hw_probes false [lindex [get_hw_devices xc7a35t_0] 0] 
// Tcl Message: INFO: [Labtools 27-1434] Device xc7a35t (JTAG device index = 0) is programmed with a design that has no supported debug core(s) in it. 
// [Engine Memory]: 1,274 MB (+672121kb) [01:10:34]
dismissDialog("Auto Connect"); // bx (ck)
selectButton(PAResourceOtoP.ProgramDebugTab_PROGRAM_DEVICE, "Program device"); // h (cM, ck)
// Run Command: PAResourceCommand.PACommandNames_PROGRAM_FPGA
// bB (ck): Program Device: addNotify
selectButton(PAResourceOtoP.ProgramFpgaDialog_PROGRAM, "Program"); // a (bB)
// bx (ck):  Program Device : addNotify
dismissDialog("Program Device"); // bB (ck)
// TclEventType: HW_DEVICE_CHANGE
// Tcl Message: set_property PROBES.FILE {} [get_hw_devices xc7a35t_0] 
// Tcl Message: set_property FULL_PROBES.FILE {} [get_hw_devices xc7a35t_0] 
// TclEventType: HW_DEVICE_CHANGE
// Tcl Message: set_property PROGRAM.FILE {D:/PROJECTs/fpga-iot/tft/tft.runs/impl_1/main.bit} [get_hw_devices xc7a35t_0] 
// Tcl Message: program_hw_devices [get_hw_devices xc7a35t_0] 
// TclEventType: HW_DEVICE_CHANGE
// Tcl Message: INFO: [Labtools 27-3164] End of startup status: HIGH 
// TclEventType: HW_DEVICE_CHANGE
// TclEventType: HW_SYSMON_CHANGE
// TclEventType: HW_DEVICE_UPDATE
// TclEventType: HW_DEVICE_CHANGE
// TclEventType: HW_DEVICE_PROBES_CHANGE
// TclEventType: DEBUG_PROBE_SET_CHANGE
// TclEventType: HW_DEVICE_PROBES_CHANGE
// Tcl Message: refresh_hw_device [lindex [get_hw_devices xc7a35t_0] 0] 
// Tcl Message: INFO: [Labtools 27-1434] Device xc7a35t (JTAG device index = 0) is programmed with a design that has no supported debug core(s) in it. 
dismissDialog("Program Device"); // bx (ck)
// Elapsed time: 28 seconds
selectCodeEditor("SPI_GLCD.vhd", 89, 389); // ce (w, ck)
selectCodeEditor("SPI_GLCD.vhd", 89, 389, false, false, false, false, true); // ce (w, ck) - Double Click
typeControlKey((HResource) null, "SPI_GLCD.vhd", 'c'); // ce (w, ck)
selectCodeEditor("SPI_GLCD.vhd", 197, 385); // ce (w, ck)
// TclEventType: DG_GRAPH_STALE
// TclEventType: FILE_SET_CHANGE
// TclEventType: DG_ANALYSIS_MSG_RESET
// TclEventType: DG_GRAPH_GENERATED
selectCodeEditor("SPI_GLCD.vhd", 106, 82); // ce (w, ck)
selectCodeEditor("SPI_GLCD.vhd", 106, 82, false, false, false, false, true); // ce (w, ck) - Double Click
typeControlKey((HResource) null, "SPI_GLCD.vhd", 'c'); // ce (w, ck)
selectCodeEditor("SPI_GLCD.vhd", 102, 299); // ce (w, ck)
typeControlKey((HResource) null, "SPI_GLCD.vhd", 'v'); // ce (w, ck)
// TclEventType: DG_GRAPH_STALE
// TclEventType: FILE_SET_CHANGE
// TclEventType: DG_ANALYSIS_MSG_RESET
// TclEventType: DG_GRAPH_GENERATED
// Elapsed time: 10 seconds
selectCodeEditor("SPI_GLCD.vhd", 167, 300); // ce (w, ck)
// TclEventType: DG_GRAPH_STALE
// TclEventType: FILE_SET_CHANGE
// TclEventType: DG_ANALYSIS_MSG_RESET
selectCodeEditor("SPI_GLCD.vhd", 238, 214); // ce (w, ck)
// TclEventType: DG_GRAPH_GENERATED
selectCodeEditor("SPI_GLCD.vhd", 203, 127); // ce (w, ck)
// TclEventType: DG_GRAPH_STALE
// TclEventType: FILE_SET_CHANGE
// TclEventType: DG_ANALYSIS_MSG_RESET
// TclEventType: DG_GRAPH_GENERATED
// TclEventType: DG_GRAPH_STALE
// TclEventType: FILE_SET_CHANGE
// Tcl Message: update_compile_order -fileset sources_1 
// TclEventType: FILE_SET_CHANGE
// TclEventType: DG_ANALYSIS_MSG_RESET
// TclEventType: DG_GRAPH_GENERATED
selectCodeEditor("SPI_GLCD.vhd", 136, 252); // ce (w, ck)
// TclEventType: DG_GRAPH_STALE
// TclEventType: FILE_SET_CHANGE
// Tcl Message: update_compile_order -fileset sources_1 
selectCodeEditor("SPI_GLCD.vhd", 136, 251, false, false, false, false, true); // ce (w, ck) - Double Click
typeControlKey((HResource) null, "SPI_GLCD.vhd", 'c'); // ce (w, ck)
// TclEventType: DG_ANALYSIS_MSG_RESET
// TclEventType: DG_GRAPH_GENERATED
// Elapsed time: 11 seconds
selectCodeEditor("SPI_GLCD.vhd", 302, 199); // ce (w, ck)
typeControlKey((HResource) null, "SPI_GLCD.vhd", 'v'); // ce (w, ck)
// Elapsed time: 20 seconds
typeControlKey((HResource) null, "SPI_GLCD.vhd", 'v'); // ce (w, ck)
typeControlKey((HResource) null, "SPI_GLCD.vhd", 'v'); // ce (w, ck)
typeControlKey((HResource) null, "SPI_GLCD.vhd", 'v'); // ce (w, ck)
selectCodeEditor("SPI_GLCD.vhd", 237, 418); // ce (w, ck)
// TclEventType: DG_GRAPH_STALE
// TclEventType: FILE_SET_CHANGE
// TclEventType: DG_ANALYSIS_MSG_RESET
// TclEventType: DG_GRAPH_GENERATED
// Elapsed time: 17 seconds
selectCodeEditor("SPI_GLCD.vhd", 341, 178); // ce (w, ck)
selectCodeEditor("SPI_GLCD.vhd", 341, 178, false, false, false, false, true); // ce (w, ck) - Double Click
typeControlKey((HResource) null, "SPI_GLCD.vhd", 'c'); // ce (w, ck)
selectCodeEditor("SPI_GLCD.vhd", 319, 407); // ce (w, ck)
typeControlKey((HResource) null, "SPI_GLCD.vhd", 'v'); // ce (w, ck)
// Elapsed time: 21 seconds
typeControlKey((HResource) null, "SPI_GLCD.vhd", 'v'); // ce (w, ck)
typeControlKey((HResource) null, "SPI_GLCD.vhd", 'v'); // ce (w, ck)
// Elapsed time: 10 seconds
typeControlKey((HResource) null, "SPI_GLCD.vhd", 'v'); // ce (w, ck)
// TclEventType: DG_GRAPH_STALE
// TclEventType: FILE_SET_CHANGE
// TclEventType: DG_ANALYSIS_MSG_RESET
// TclEventType: DG_GRAPH_GENERATED
// TclEventType: DG_GRAPH_STALE
// TclEventType: FILE_SET_CHANGE
// Tcl Message: update_compile_order -fileset sources_1 
// TclEventType: DG_ANALYSIS_MSG_RESET
// TclEventType: DG_GRAPH_GENERATED
// TclEventType: FILE_SET_CHANGE
// TclEventType: DG_GRAPH_STALE
// TclEventType: FILE_SET_CHANGE
// TclEventType: DG_GRAPH_STALE
// Elapsed time: 25 seconds
selectTree(PAResourceEtoH.FlowNavigatorTreePanel_FLOW_NAVIGATOR_TREE, "[, Program and Debug, Generate Bitstream]", 20, false); // u (O, ck)
// Run Command: PAResourceCommand.PACommandNames_RUN_BITGEN
// A (ck): Synthesis is Out-of-date: addNotify
// TclEventType: DG_ANALYSIS_MSG_RESET
// TclEventType: DG_GRAPH_GENERATED
// TclEventType: DG_GRAPH_STALE
// TclEventType: FILE_SET_CHANGE
// Tcl Message: update_compile_order -fileset sources_1 
selectButton(RDIResource.BaseDialog_YES, "Yes"); // a (A)
// bx (ck):  Resetting Runs : addNotify
// TclEventType: RUN_MODIFY
dismissDialog("Synthesis is Out-of-date"); // A (ck)
// TclEventType: RUN_RESET
// TclEventType: RUN_MODIFY
// Tcl Message: reset_run synth_1 
// 'cv' command handler elapsed time: 4 seconds
// TclEventType: DG_ANALYSIS_MSG_RESET
dismissDialog("Resetting Runs"); // bx (ck)
// bx (ck):  Generate Bitstream : addNotify
// Tcl Message: launch_runs impl_1 -to_step write_bitstream -jobs 4 
// TclEventType: DG_GRAPH_GENERATED
// TclEventType: RUN_LAUNCH
// TclEventType: RUN_MODIFY
// Tcl Message: [Sat Apr  6 13:55:11 2019] Launched synth_1... Run output will be captured here: D:/PROJECTs/fpga-iot/tft/tft.runs/synth_1/runme.log [Sat Apr  6 13:55:11 2019] Launched impl_1... Run output will be captured here: D:/PROJECTs/fpga-iot/tft/tft.runs/impl_1/runme.log 
dismissDialog("Generate Bitstream"); // bx (ck)
// TclEventType: DG_ANALYSIS_MSG_RESET
// TclEventType: DG_GRAPH_GENERATED
// Elapsed time: 21 seconds
selectCodeEditor("SPI_GLCD.vhd", 323, 297); // ce (w, ck)
// Elapsed time: 13 seconds
selectTab((HResource) null, (HResource) null, "Messages", 1); // aE (Q, ck)
// TclEventType: RUN_COMPLETED
// [GUI Memory]: 103 MB (+213kb) [01:15:19]
// TclEventType: RUN_STEP_COMPLETED
// TclEventType: RUN_FAILED
// ah (ck): Bitstream Generation Failed: addNotify
// Elapsed time: 131 seconds
selectButton(RDIResource.BaseDialog_CANCEL, "Cancel"); // a (ah)
dismissDialog("Bitstream Generation Failed"); // ah (ck)
selectCodeEditor("SPI_GLCD.vhd", 171, 401); // ce (w, ck)
selectButton(RDIResourceCommand.RDICommands_LINE_COMMENT, (String) null); // B (f, ck)
// TclEventType: DG_GRAPH_STALE
// TclEventType: FILE_SET_CHANGE
// TclEventType: DG_ANALYSIS_MSG_RESET
selectCodeEditor("SPI_GLCD.vhd", 370, 243); // ce (w, ck)
// TclEventType: DG_GRAPH_GENERATED
selectCodeEditor("SPI_GLCD.vhd", 289, 371); // ce (w, ck)
// Elapsed time: 10 seconds
selectCodeEditor("SPI_GLCD.vhd", 255, 213); // ce (w, ck)
// Elapsed time: 25 seconds
selectCodeEditor("SPI_GLCD.vhd", 214, 328); // ce (w, ck)
selectCodeEditor("SPI_GLCD.vhd", 298, 418); // ce (w, ck)
// TclEventType: DG_GRAPH_STALE
// TclEventType: FILE_SET_CHANGE
// Elapsed time: 17 seconds
selectTree(PAResourceEtoH.FlowNavigatorTreePanel_FLOW_NAVIGATOR_TREE, "[, Program and Debug, Generate Bitstream]", 20, false); // u (O, ck)
// TclEventType: DG_ANALYSIS_MSG_RESET
// TclEventType: DG_GRAPH_GENERATED
// TclEventType: FILE_SET_CHANGE
// TclEventType: DG_GRAPH_STALE
// TclEventType: FILE_SET_CHANGE
// TclEventType: DG_GRAPH_STALE
// TclEventType: DG_ANALYSIS_MSG_RESET
// TclEventType: DG_GRAPH_GENERATED
selectTree(PAResourceEtoH.FlowNavigatorTreePanel_FLOW_NAVIGATOR_TREE, "[, Program and Debug, Generate Bitstream]", 20, false); // u (O, ck)
// TclEventType: DG_GRAPH_STALE
// TclEventType: FILE_SET_CHANGE
expandTree(PAResourceEtoH.FlowNavigatorTreePanel_FLOW_NAVIGATOR_TREE, "[, Project Manager]", 0); // u (O, ck)
// Run Command: PAResourceCommand.PACommandNames_RUN_BITGEN
// A (ck): Synthesis is Out-of-date: addNotify
// Tcl Message: update_compile_order -fileset sources_1 
selectButton(RDIResource.BaseDialog_YES, "Yes"); // a (A)
// bx (ck):  Resetting Runs : addNotify
// TclEventType: RUN_MODIFY
dismissDialog("Synthesis is Out-of-date"); // A (ck)
// TclEventType: RUN_RESET
// TclEventType: RUN_MODIFY
// Tcl Message: reset_run synth_1 
dismissDialog("Resetting Runs"); // bx (ck)
// TclEventType: DG_ANALYSIS_MSG_RESET
// Tcl Message: launch_runs impl_1 -to_step write_bitstream -jobs 4 
// bx (ck):  Generate Bitstream : addNotify
// TclEventType: DG_GRAPH_GENERATED
// TclEventType: RUN_LAUNCH
// TclEventType: RUN_MODIFY
// Tcl Message: [Sat Apr  6 13:59:24 2019] Launched synth_1... Run output will be captured here: D:/PROJECTs/fpga-iot/tft/tft.runs/synth_1/runme.log [Sat Apr  6 13:59:24 2019] Launched impl_1... Run output will be captured here: D:/PROJECTs/fpga-iot/tft/tft.runs/impl_1/runme.log 
dismissDialog("Generate Bitstream"); // bx (ck)
// TclEventType: DG_ANALYSIS_MSG_RESET
// TclEventType: DG_GRAPH_GENERATED
// TclEventType: RUN_COMPLETED
// TclEventType: RUN_STEP_COMPLETED
// TclEventType: RUN_COMPLETED
// ah (ck): Bitstream Generation Completed: addNotify
// Elapsed time: 182 seconds
selectButton(RDIResource.BaseDialog_CANCEL, "Cancel"); // a (ah)
dismissDialog("Bitstream Generation Completed"); // ah (ck)
selectButton(PAResourceOtoP.ProgramDebugTab_PROGRAM_DEVICE, "Program device"); // h (cM, ck)
// Run Command: PAResourceCommand.PACommandNames_PROGRAM_FPGA
// bB (ck): Program Device: addNotify
selectButton(PAResourceOtoP.ProgramFpgaDialog_PROGRAM, "Program"); // a (bB)
// bx (ck):  Program Device : addNotify
// TclEventType: HW_DEVICE_CHANGE
dismissDialog("Program Device"); // bB (ck)
// Tcl Message: set_property PROBES.FILE {} [get_hw_devices xc7a35t_0] 
// Tcl Message: set_property FULL_PROBES.FILE {} [get_hw_devices xc7a35t_0] 
// TclEventType: HW_DEVICE_CHANGE
// Tcl Message: set_property PROGRAM.FILE {D:/PROJECTs/fpga-iot/tft/tft.runs/impl_1/main.bit} [get_hw_devices xc7a35t_0] 
// Tcl Message: program_hw_devices [get_hw_devices xc7a35t_0] 
// TclEventType: HW_DEVICE_CHANGE
// Tcl Message: INFO: [Labtools 27-3164] End of startup status: HIGH 
// TclEventType: HW_DEVICE_CHANGE
// TclEventType: HW_SYSMON_CHANGE
// TclEventType: HW_DEVICE_UPDATE
// TclEventType: HW_DEVICE_CHANGE
// TclEventType: HW_DEVICE_PROBES_CHANGE
// TclEventType: DEBUG_PROBE_SET_CHANGE
// TclEventType: HW_DEVICE_PROBES_CHANGE
// Tcl Message: refresh_hw_device [lindex [get_hw_devices xc7a35t_0] 0] 
// Tcl Message: INFO: [Labtools 27-1434] Device xc7a35t (JTAG device index = 0) is programmed with a design that has no supported debug core(s) in it. 
dismissDialog("Program Device"); // bx (ck)
// HMemoryUtils.trashcanNow. Engine heap size: 1,287 MB. GUI used memory: 50 MB. Current time: 4/6/19 2:21:30 PM EEST
